---
# tasks file for ec2-provision

- name: Create security group
  ec2_group:
    name: "{{ project_name }}_sg"
    description: "{{ project_name }} security group"
    region: "{{ region }}"
    rules:
      - proto: tcp  # ssh
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # http
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # https
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # http
        from_port: 8080
        to_port: 8080
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # http
        from_port: 5000
        to_port: 5000
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: firewall_sg

#- name: Create a new EC2 key
#  ec2_key:
#         name: "{{ project_name }}-lw"
#         region: "{{ region }}"
#         key_material: "{{ lookup('file', '/home/kali/.ssh/id_rsa.pub') }}"

- name: Create an EC2 instance
  ec2:
    #aws_access_key: "{{ec2_access_key}}"
    #aws_secret_key: "{{ec2_secret_key}}"
    key_name: jenkins
    region: "{{ region }}"
    group_id: "{{ firewall_sg.group_id }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami }}"
    id: "{{ project_name }}"
    wait: yes
    instance_tags:
        Name: "{{ project_name }}"
    count_tag: Name
    exact_count: 1
    vpc_subnet_id: subnet-01da812458e44c0e8
    assign_public_ip: yes
  register: ec2

- name: Pause for 2 minutes
  pause:
    minutes: 2

- meta: refresh_inventory

#- debug: msg="{{ec2.instances[0].id}}"